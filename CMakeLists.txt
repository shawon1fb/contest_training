cmake_minimum_required(VERSION 3.21)
project(contest_training)

set(CMAKE_CXX_STANDARD 14)

#add_executable(contest_training main.cpp backtracking/finding_subsets.cpp dynamic_programming/fibonacci_series.cpp)
#add_executable(contest_training  backtracking/finding_subsets.cpp)
#add_executable(contest_training backtracking/letter_combinations_of_a_phone_number.cpp )
#add_executable(contest_training backtracking/permuations.cpp )
#add_executable(contest_training backtracking/brackets.cpp )
#add_executable(contest_training data_structure_and_stl_containers/find_k_closest_elements.cpp )

#add_executable(contest_training dynamic_programming/fibonacci_series.cpp )
#add_executable(contest_training dynamic_programming/n-k_ladders_to_down.cpp )
#add_executable(contest_training data_structure_and_stl_containers/first_unique_character_in_a_string.cpp )
#add_executable(contest_training data_structure_and_stl_containers/kth_largest_element.cpp )
#add_executable(contest_training data_structure_and_stl_containers/one_integer.cpp )
#add_executable(contest_training data_structure_and_stl_containers/maximum_score_from_removing_stones.cpp )
#add_executable(contest_training data_structure_and_stl_containers/distinct_candies.cpp )
#add_executable(contest_training  recursion/tower_of_hanoi.cpp)


#add_executable(contest_training leet_code_solution/78_subsets.cpp )
#add_executable(contest_training binary_search/binary_search.cpp)
#add_executable(contest_training binary_search/lower_bound_binary_search.cpp )
#add_executable(contest_training binary_search/upper_bound_binary_search.cpp )
add_executable(contest_training binary_search/angry_birds.cpp)